package com.nitya.rest.users.controller;

import java.net.URI;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.support.ServletUriComponentsBuilder;

import com.nitya.rest.users.Entity.User;
import com.nitya.rest.users.Entity.Wishlist;
import com.nitya.rest.users.exception.UserNotFoundException;
import com.nitya.rest.users.repository.UserRepository;
import com.nitya.rest.users.repository.WishlistRepository;
import com.nitya.rest.users.service.UsersServiceImpl;

import jakarta.validation.Valid;

@RestController
public class UsersController {
	
	@Autowired
	private UserRepository userRepo;
	
	@Autowired
	private WishlistRepository wishlistRepo; 
	
	@Autowired
	private UsersServiceImpl usersServiceImpl;

	@GetMapping(path = "/users")
	public List<User> getAllUserDetails() {
		return usersServiceImpl.getAllUserDetails();
	}
	
	@GetMapping(path = "/users/{id}")
	public User getUserDetails(@PathVariable Integer id) {
		return usersServiceImpl.getUserDetails(id);
	}
	
	@DeleteMapping(path = "/users/{id}")
	public void deleteUserDetails(@PathVariable Integer id) {
		usersServiceImpl.deleteUserDetails(id);
	}
	
	@PostMapping(path = "/users")
	public ResponseEntity<User> addUser(@Valid @RequestBody User user) {
		return usersServiceImpl.addUser(user);
	}
	
//	@GetMapping(path = "/users/{id}/wishlist")
//	public Wishlist getUserWishlist(@PathVariable Integer id) {
//		Optional<User> userDetails = userRepo.findById(id);
//		
//		if(userDetails.isEmpty()){
//			throw new UserNotFoundException(""+id);
//		}
//		return userDetails.get().getWishlist();
//	}
//	
//	@PostMapping(path = "/users/{id}/wishlist")
//	public ResponseEntity<Wishlist> getUserDetails(@PathVariable Integer id,@RequestBody Integer propertyId) {
//		Optional<User> userDetails = userRepo.findById(id);
//		
//		if(userDetails.isEmpty()){
//			throw new UserNotFoundException(""+id);
//		}
//		
//		Wishlist userWishlist = userDetails.get().getWishlist();
//		userWishlist.addPropertyId(propertyId);
//		URI location = ServletUriComponentsBuilder.fromCurrentContextPath()
//				.path("")
//				.buildAndExpand(userWishlist.getId())
//				.toUri();
//		
//		return ResponseEntity.created(location).build();
//	}
}
